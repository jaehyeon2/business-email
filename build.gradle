buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.gretty:gretty:3.1.1"
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'war'
}

apply plugin: "org.gretty"

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
    springVersion = '5.3.30'
    springSecurityVersion = '5.7.4'
    slf4jVersion = '1.7.36'
    logbackVersion = '1.3.4'
    tomcatVersion = '9.0.68'

    jsoupVersion = '1.15.3'
    jsonVersion = '20210307'
}

dependencies {
    implementation 'org.slf4j:slf4j-api:' + slf4jVersion
    implementation "org.springframework:spring-core:" + springVersion
    implementation "org.springframework:spring-beans:" + springVersion
    implementation "org.springframework:spring-web:" + springVersion
    implementation "org.springframework:spring-webmvc:" + springVersion
    implementation 'org.springframework:spring-context:' + springVersion
    implementation 'org.springframework:spring-context-support:' + springVersion
    implementation 'org.springframework:spring-jdbc:' + springVersion
    implementation 'org.springframework.security:spring-security-core:' + springSecurityVersion
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'
    implementation 'org.apache.commons:commons-pool2:2.11.1'
    implementation "org.mybatis:mybatis:3.5.11"
    implementation 'org.mybatis:mybatis-spring:2.0.7'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.5'
    implementation "org.freemarker:freemarker:2.3.31"

    implementation 'org.jsoup:jsoup:' + jsoupVersion
    implementation 'org.json:json:' + jsonVersion

    runtimeOnly 'org.slf4j:jcl-over-slf4j:' + slf4jVersion
}

gretty {
    servletContainer = 'jetty9'
    host = '127.0.0.1'
    httpPort = 9001
    scanInterval = 1
    contextPath = ''
    httpsEnabled = true
    jacocoEnabled = false
}

/* Multi-users environment */
final String DEFAULT_PROFILE = 'local'
allprojects {
    if (!project.hasProperty('profile') || !profile) {
        ext.profile = DEFAULT_PROFILE
    }
    sourceSets {
        main {
            resources {
                srcDir "config/${profile}"
            }
        }
    }
    processResources {
        duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
    }
}

war {
    archiveName = "ROOT.war"
}

task deployWar(type: Copy) {
    from 'build/libs/ROOT.war'
    into 'webapps'
    include '**/*.war'
}

deployWar.dependsOn(war)
